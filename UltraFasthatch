
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Liquid Hub V2💧| #1 Pet Simulator 99 Script Hub.",
    LoadingTitle = "Liquid Hub V2💧| #1 Pet Simulator 99 Script Hub.",
    LoadingSubtitle = "Made by Liquid Developers💧",
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
    Discord = {
       Enabled = true,
       Invite = "nyAv2TP7Xj", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key syste m
    KeySettings = {
       Title = "Liquid Hub V2 Key System💧",
       Subtitle = "Liquid Custom Key System🔑",
       Note = "A Free Limited Time Key Is Provided In Our Youtube Video!🔑",
       FileName = "LiquidHubKey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"FreeKey"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 -- Information Tab --
 local InfoTab = Window:CreateTab("Script Information", 16468487927) -- Title, Image
 local Section = InfoTab:CreateSection("Developer Information🛠️")
 local Label = InfoTab:CreateLabel("All Scripts Inside Liquid Hub Has Been Made And Coded By Liquid Developers!")
 local Paragraph = InfoTab:CreateParagraph({Title = "Script Disclaimer!", Content = "Some Exploits Still In Testing!🛠️ Some Scripts May Not Work!"})
 local Paragraph = InfoTab:CreateParagraph({Title = "Settings Automatically Saved!", Content = "All Of Your Settings Are Automatically Saved! It Will Auto Load Upon Rejoin!💧"})

 -- Discord Server Link --
 local Button = InfoTab:CreateButton({
    Name = "Copy Discord Server🔗",
    Callback = function()
        setclipboard("discord.gg/nyAv2TP7Xj")
        print("Discord server link copied to clipboard!")
    end,
})

-- Ultra Fast Hatch --
local EggTab = Window:CreateTab("Ultra Fast Hatch", 15172353804) -- Title, Image
local Label = EggTab:CreateSection("Egg Stats And Information🥚")
local Paragraph = EggTab:CreateParagraph({Title = "Statistics", Content = "🥚Egg Hatch Speed: 10.0x speed, 🥚Total Hatched: 0, 🥚Egg Animation: On"})

-- Hatch Speed Button --
local message = require(game.ReplicatedStorage.Library.Client.Message)

local Toggle = EggTab:CreateToggle({
    Name = "🥚Toggle Fast Hatch",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        if Value then
            message.Error("Fast Hatch Successfully Toggled!")
        else
            message.Error("Fast Hatch Successfully Untoggled!")
        end
    end,
})
local Slider = EggTab:CreateSlider({
    Name = "🥚Egg Hatch Speed",
    Range = {0, 20},
    Increment = 1,
    Suffix = "Hatch Speed",
    CurrentValue = 10,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })
 local Keybind = EggTab:CreateKeybind({
    Name = "🥚Fast Hatch Toggle Keybind",
    CurrentKeybind = "C",
    HoldToInteract = false,
    Flag = "Keybind1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Keybind)
    -- The function that takes place when the keybind is pressed
    -- The variable (Keybind) is a boolean for whether the keybind is being held or not (HoldToInteract needs to be true)
    end,
 })
local Label = EggTab:CreateLabel("Thanks For Using Liquid Hub!💧 - Liquid Developers")

-- Misc --
local MiscTab = Window:CreateTab("Misc Settings", 17109789793) -- Title, Image
local Section = MiscTab:CreateSection("Miscellaneous Scripts⚙️")

-- FPS Unlocker --
local Toggle = MiscTab:CreateToggle({
    Name = "🔓FPS Unlocker",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })
 local Paragraph = MiscTab:CreateParagraph({Title = "FPS Unlocker Info", Content = "Uncaps Your Roblox Client FPS, Boosts And Uncaps Your FPS!"})

 -- FPS Booster --
 local Toggle = MiscTab:CreateToggle({
    Name = "📈FPS Booster",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })
 local Paragraph = MiscTab:CreateParagraph({Title = "FPS Booster Info", Content = "Removes 3D Rendering, Removes Rendering Options!"})
 local Label = MiscTab:CreateLabel("Thanks For Using Liquid Hub!💧 - Liquid Developers")
